openapi: 3.0.1
info:
  title: Synx ML API
  description: Machine Learning RESTful API Backend.
  version: 1.0.0
servers:
- url: /api
paths:
  /:
    get:
      tags:
      - Status
      summary: Index endpoint returning current API status.
      operationId: getIndex
      responses:
        200:
          description: An object containing current status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /auth/login:
    post:
      tags:
      - Auth
      summary: Post request to authenticate, the default parameters used here are
        valid only on debug mode.
      operationId: postAuthLogin
      requestBody:
        description: The login format passed as an object on the request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        200:
          description: On success, returns authentication success message and tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: On bad request, prompts invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadFormatResponse'
        500:
          description: On failure, returns the last error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: payload
  /auth/logout:
    get:
      tags:
      - Auth
      summary: Invalidates current token and closes the active session.
      operationId: getAuthLogout
      responses:
        200:
          description: Succesful logout.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
        500:
          description: On failure, returns the last error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh:
    post:
      tags:
      - Auth
      summary: Post to refresh the Auth Token whitout re-login.
      operationId: postAuthRefesh
      requestBody:
        description: The auth_token and refresh_token pair passed as an object on
          the request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenRequest'
        400:
          description: On bad request, prompts invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadFormatResponse'
        500:
          description: On failure, returns the last error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: payload
components:
  schemas:
    LoginRequest:
      title: Auth - Login Request
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: The username as provided.
        password:
          type: string
          description: The password as provided.
      description: This model validates the user credentials for secure API calls.
      example:
        username: admin
        password: ZJwtgQe4PB0HPe3MLgt4iKo7Kv4uWX1v
    LoginResponse:
      title: Auth - Login Success Message
      type: object
      properties:
        data:
          type: object
          properties: {}
          description: An object with access and refresh tokens.
        message:
          type: string
          description: Always ''.
        status:
          type: string
          description: Always OK.
      description: On success, the server will return an object with access and refresh
        tokens.
      example:
        data:
          access_token: Whvb0d8XWjTuMJfwMd92r2NHD69IjCvv
          refresh_token: sEHKZV4Mj0C6YN2rdgpQrLV4gSjLC7tb
        message: ""
        status: OK
    LogoutResponse:
      title: Auth - Logout Request
      type: object
      properties:
        data:
          type: object
          properties: {}
          description: Always null.
        message:
          type: string
          description: Always ''.
        status:
          type: string
          description: Always OK.
      description: This model invalidates current authentication tokens.
      example:
        message: ""
        status: OK
    RefreshTokenRequest:
      title: Auth - Refresh Token Request
      required:
      - auth_token
      - refresh_token
      type: object
      properties:
        auth_token:
          type: string
          description: The auth_token as retured by Login.
          example: AWkI17J1T43z7lrXsfaSEFzW6hjgLo5J
        refresh_token:
          type: string
          description: The associated refresh_token as retured by Login.
          example: 3xysZNQdu7uF1XEABUUtuhnJ6ZBQsMf8
      description: This model validates current authentication tokens and refreshes
        the auth_token.
      example:
        auth_token: 2OycIUc5DR5mmyLcnmR5c2xvEHzeyq7b
        refresh_token: iv2hJ96sLlW6vx1EkMy7fKmtsP26rewc
    RefreshTokenResponse:
      title: Auth - Refresh Token Response
      type: object
      properties:
        data:
          type: object
          properties: {}
          description: An object with an new access token.
        message:
          type: string
          description: Always ''.
        status:
          type: string
          description: Always OK.
      description: On success, the server will return an object with a new access
        token.
      example:
        data:
          access_token: Whvb0d8XWjTuMJfwMd92r2NHD69IjCvv
        message: ""
        status: OK
    StatusResponse:
      title: Response - API Status
      type: object
      properties:
        data:
          type: object
          properties: {}
          description: Current API version.
        message:
          type: string
          description: Always ''.
        status:
          type: string
          description: Always OK.
      description: On success, the server will return current API version.
      example:
        data:
          version: 1.0.00
        message: ""
        status: OK
    BadFormatResponse:
      title: Response - Bad Request
      type: object
      properties:
        message:
          type: string
          description: The missing or malformed input.
      description: More fields are required.
      example:
        message: The following fiels is required.
    ErrorResponse:
      title: Response - Error Message
      type: object
      properties:
        data:
          type: string
          description: Always null.
        status:
          type: string
          description: Always 'error'.
        message:
          type: string
          description: The related error or last Traceback.
      description: This is the standarized message for errors.
      example:
        status: error
        message: Error processing your request!
